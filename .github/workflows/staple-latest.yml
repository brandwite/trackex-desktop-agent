name: Staple Existing Notarization

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  staple:
    name: Rebuild, Re-sign, and Staple Notarized macOS App
    runs-on: macos-latest
    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_DEVELOPER_CERT_PASSWORD: ${{ secrets.APPLE_DEVELOPER_CERT_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Tauri CLI
        run: cargo install tauri-cli --locked

      # 🔐 Import Apple Developer Certificate
      - name: Import Apple Developer Certificate (.p12)
        run: |
          echo "🔐 Importing Apple Developer Certificate..."
          KEYCHAIN=~/Library/Keychains/build.keychain
          security create-keychain -p "$RUNNER_TEMP" build.keychain
          security set-keychain-settings -lut 21600 "$KEYCHAIN"
          security unlock-keychain -p "$RUNNER_TEMP" "$KEYCHAIN"

          security import .github/certs/certificate.p12 \
            -k "$KEYCHAIN" \
            -P "${{ secrets.APPLE_DEVELOPER_CERT_PASSWORD }}" \
            -T /usr/bin/codesign -T /usr/bin/security

          security set-key-partition-list -S apple-tool:,apple: -s -k "$RUNNER_TEMP" "$KEYCHAIN"
          security list-keychains -s "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"
          security unlock-keychain -p "$RUNNER_TEMP" "$KEYCHAIN"

      # 🧩 Debug: list available signing identities
      - name: List codesigning identities
        run: |
          echo "🔍 Listing available Developer ID identities..."
          security find-identity -v -p codesigning

      # 🏗️ Build the Tauri app (same as notarized build)
      - name: Build Tauri app (macOS)
        run: npm run tauri build

      # 🔏 Re-sign with the same Developer ID certificate and hardened runtime
      - name: Re-sign app with hardened runtime
        run: |
          APP_PATH="src-tauri/target/release/bundle/macos/TrackEx Agent.app"
          echo "🔏 Re-signing app with hardened runtime..."
          codesign --force --deep --options runtime --timestamp \
            --entitlements src-tauri/entitlements.plist \
            --sign "Developer ID Application: ${APPLE_TEAM_ID}" \
            "$APP_PATH"

          echo "✅ Verifying code signature..."
          codesign --verify --deep --strict --verbose=2 "$APP_PATH"
          spctl --assess --type execute --verbose "$APP_PATH" || true

      # 📦 Recreate the same ZIP that was notarized
      - name: Recreate notarized ZIP
        run: |
          APP_PATH="src-tauri/target/release/bundle/macos/TrackEx Agent.app"
          ZIP_PATH="src-tauri/target/release/bundle/macos/TrackEx Agent.zip"
          echo "📦 Creating ZIP for stapling..."
          ditto -c -k --keepParent "$APP_PATH" "$ZIP_PATH"
          ls -lh "$ZIP_PATH"

      # 📎 Staple notarization ticket
      - name: Staple notarization ticket
        run: |
          APP_PATH="src-tauri/target/release/bundle/macos/TrackEx Agent.app"
          echo "📎 Stapling notarization ticket..."
          xcrun stapler staple "$APP_PATH" || true

          echo "✅ Validating stapling..."
          xcrun stapler validate "$APP_PATH" || true

          echo "🔍 Checking Gatekeeper assessment..."
          spctl --assess --type execute --verbose "$APP_PATH" || true

      # 📤 (Optional) Upload stapled app as artifact for manual download
      - name: Upload stapled app
        uses: actions/upload-artifact@v4
        with:
          name: stapled-app
          path: src-tauri/target/release/bundle/macos/TrackEx Agent.app
