[package]
name = "trackex-agent"
version = "1.0.0"
description = "TrackEx Desktop Agent for macOS"
authors = ["TrackEx"]
edition = "2021"

[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
tauri = { version = "2", features = ["tray-icon"] }
tauri-plugin-dialog = "2"
tauri-plugin-fs = "2"
tauri-plugin-http = "2"
tauri-plugin-notification = "2"
tauri-plugin-os = "2"
tauri-plugin-shell = "2"
tauri-plugin-updater = "2"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
tokio = { version = "1", features = ["full"] }
reqwest = { version = "0.12", features = ["json", "rustls-tls"], default-features = false }
rusqlite = { version = "0.31", features = ["bundled", "chrono"] }
keyring = "2.3"
uuid = { version = "1.8", features = ["v4"] }
chrono = { version = "0.4", features = ["serde"] }
anyhow = "1.0"
log = "0.4"
env_logger = "0.11"
image = "0.24"
dirs = "5.0"
base64 = "0.22"
regex = "1.10"
lazy_static = "1.4"
rand = "0.8"
sysinfo = "0.30.5"

[dev-dependencies]
tempfile = "3.8"
tokio-test = "0.4"

# macOS specific dependencies
[target.'cfg(target_os = "macos")'.dependencies]
cocoa = "0.25"
core-foundation = "0.9"
core-graphics = "0.23"
objc = "0.2"

[features]
default = ["custom-protocol"]
custom-protocol = ["tauri/custom-protocol"]

[lib]
name = "trackex_agent_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[[bin]]
name = "trackex-agent"
path = "src/main.rs"

# Windows specific dependencies
[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.62.1", features = [
    "Win32_Foundation",
    "Win32_Graphics_Gdi",
    "Win32_Graphics_DirectComposition",
    "Win32_Graphics_Dwm",
    "Win32_UI_WindowsAndMessaging",
    "Win32_System_SystemInformation",
    "Win32_System_Threading",
    "Win32_System_Diagnostics_ToolHelp",
    "Win32_System_Diagnostics_Debug",
    "Win32_UI_Shell",
    "Win32_System_Com",
    "Win32_System_ProcessStatus",
    "Win32_Storage_Packaging_Appx",
] }

winapi = { version = "0.3", features = [
    "winuser",
    "processthreadsapi",
    "tlhelp32",
    "sysinfoapi",
    "winver",
    "winbase",
    "errhandlingapi",
    "handleapi",
    "winnt",
    "wincred"
] }
