name: Build, Sign, and Notarize macOS App

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-sign-notarize:
    runs-on: macos-latest
    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_DEVELOPER_CERT_PASSWORD: ${{ secrets.APPLE_DEVELOPER_CERT_PASSWORD }}

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🦀 Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: 🧰 Install Tauri CLI (latest stable)
        run: |
          cargo uninstall tauri-cli || true
          cargo install tauri-cli --version 2.9.0
          # ⬆️ Try latest, fallback to 2.7.0 if needed

      - name: 🔐 Import Apple Developer Certificate (.p12)
        run: |
          echo "🔐 Importing Apple Developer Certificate..."
          KEYCHAIN=~/Library/Keychains/build.keychain
          security create-keychain -p "$RUNNER_TEMP" build.keychain
          security set-keychain-settings -lut 21600 "$KEYCHAIN"
          security unlock-keychain -p "$RUNNER_TEMP" "$KEYCHAIN"

          security import .github/certs/certificate.p12 \
            -k "$KEYCHAIN" \
            -P "${{ secrets.APPLE_DEVELOPER_CERT_PASSWORD }}" \
            -T /usr/bin/codesign -T /usr/bin/security

          security set-key-partition-list -S apple-tool:,apple: -s -k "$RUNNER_TEMP" "$KEYCHAIN"
          security list-keychains -s "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"
          security unlock-keychain -p "$RUNNER_TEMP" "$KEYCHAIN"

      - name: 🔍 List codesigning identities
        run: security find-identity -v -p codesigning

      - name: 🏗️ Build, Sign, and Notarize macOS app
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CI: true
        run: |
          echo "🏗️ Building and notarizing TrackEx Agent for macOS..."
          npm run tauri build

      - name: 🧪 Verify code signature and stapling
        run: |
          APP_PATH="src-tauri/target/release/bundle/macos/TrackEx Agent.app"
          echo "🔏 Verifying code signature..."
          codesign --verify --deep --strict --verbose=2 "$APP_PATH"

          echo "🔍 Checking Gatekeeper assessment..."
          spctl --assess --type execute --verbose "$APP_PATH" || true

          echo "📎 Verifying stapling..."
          xcrun stapler validate "$APP_PATH" || true

      - name: 🚀 Upload notarized .app
        uses: actions/upload-artifact@v4
        with:
          name: TrackEx-Agent-app
          path: src-tauri/target/release/bundle/macos/TrackEx Agent.app

      - name: 🚀 Upload notarized .dmg
        uses: actions/upload-artifact@v4
        with:
          name: TrackEx-Agent-dmg
          path: src-tauri/target/release/bundle/dmg/TrackEx Agent_*.dmg
